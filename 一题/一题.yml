1. 写 React / Vue 项目时为什么要在列表组件中写 key，其作用是什么?
  - 肯定是做diff用的。对比node的时候，遍历快还是map快呢？这里又可以引申出React的diff算法是怎么玩的。
  - React diff算法详解: TODO:

第 2 题：['1', '2', '3'].map(parseInt) what & why ?
  - parseInt的参数，第一个是数字，第二个是进制。一般来讲，只有像lodash、d3之类工具库，大版本之间的参数可能会有不同。还有就是公司内部自己写的工具方法，可能会调整参数。单测写好，注意一下，一般没什么大问题。

第 3 题：（挖财）什么是防抖和节流？有什么区别？如何实现？
  - 俩都是为了性能优化。一个是间隔时间内触发，前一个不执行。一个是单位时间内的多次出发只会执行一次。什么时候适合防抖、是么时候节流。比如一个input框，输入完进行搜索，肯定防抖合适；敲了100遍回车，一般来讲，节流会好一点。

第 4 题：介绍下 Set、Map、WeakSet 和 WeakMap 的区别？
  - 都是es6里新的数据结构。
  - 都是干啥的：
    - Set，一个所有值不重复的可枚举数据结构，但为什么设计个Set出来，我没有很理解，我还没碰到哪些场景一定要用Set的。也有可能是为了促进语言本身的发展和融合？毕竟java里面也有Set这个概念。 
    - Map，一个key可以为各种数据结构的对象，Object的key只能为字符串；如果用一个空对象，属性可以直接访问和设置，但Map不行。
    - WeakMap，只接受对象作为key，别的不行；作为key的对象，不计入垃圾回收。主要用来防止内存泄漏；
  - 为啥引入这些数据结构，数组不香么？对象不香么？为了解决什么问题？
    - 比如Set，用的很少。除了去重，很少用到。不过想想，已经有了_，Array为啥还要封装自己的方法呢？用得多了，就纳为标准，真香。
  - 什么场景适合这些问题？

第 5 题：介绍下深度优先遍历和广度优先遍历，如何实现？
  - 略

第 6 题：请分别用深度优先思想和广度优先思想实现一个拷贝函数？
  - 略

第 7 题：ES5/ES6 的继承除了写法以外还有什么区别？
  - 暂时不纠结语法问题。

第 8 题：setTimeout、Promise、Async/Await 的区别
  - 宏任务、微任务就没什么可说的了。我们可以想想，微任务是后来才有的么？自己瞎猜的，它应该是一直存在的。setTimeout的时候，键盘事件会触发么？鼠标事件会触发么？当然会，这些事件是否可以理解为“微任务”呢？在没有Promise的年代，我们怎么做的？神奇的callback。当然我们可以自己实现一个Promise。Async和Await其实可以理解成Promise的语法糖。可以进一步聊聊浏览器的执行机制。 

第 9 题：（头条、微医）Async/Await 如何通过同步的方式实现异步
  - 略

第 11 题：（携程）算法手写题
  - 我个人的习惯，如果数据量不大，第一优先级是让同事读的懂而不是炫技，所以怎么简单怎么来；如果数据量可能太大，再考虑性能优化的事儿。

第 12 题：（滴滴、挖财、微医、海康）JS 异步解决方案的发展历程以及优缺点。
  - 有问题，才会想着解决问题；
  - callback回调地狱，我没感受过，不过肯定很苦逼；
  - Promise，挺好用，不过没办法取消；
  - generator，随时可以停止。
  - async/await，形式上和generator差不多；

第 13 题：（微医）Promise 构造函数是同步执行还是异步执行，那么then 方法呢？
  - 先明确一下，什么是同步，什么是异步。放在微任务宏任务里的，才把他们看成是异步。所以构造函数当然是同步；then之后的东西要放在微任务里，肯定异步咯。

第 14 题：（兑吧）情人节福利题，如何实现一个 new？
- 先知道new干了啥；
  - 先生成一个新的空对象；
  - 初始化参数；
  - 把prototype都引上去。
- 好吧，事实说明爸爸忘了prototype和__proto__的关系。那就让爸爸来理一理。好的爸爸理清楚了。

第 15 题：（网易）简单讲解一下http2的多路复用。
  - 先说复用，它复用的是个啥玩意。早期一个http就要用一个tcp，1.1里面弄了个keep-alive，tcp能复用了，但还是每次只能处理一个http请求。如果同时有多个怎么办？2干了几件事儿？多路复用、二进制分帧、http头压缩，都是很常规的优化手段。
  - 提到了多路复用，这只是tcp和http阶段的，其他阶段能不能干点儿事儿呢？当然能，主要你琢磨就行了。

第 16 题：谈谈你对TCP三次握手和四次挥手的理解
第 17 题：A、B 机器正常连接后，B 机器突然重启，问 A 此时处于 TCP 什么状态
  - 详见爸爸写的文章吧；

思考：
1. 为什么要设计箭头函数？
  - 我的理解是：让方法存粹化。老的function有太多对象的影子在里面，各种call、apply、this、argument等等...

额外收获：
- slice的参数为负数，原来是用了length的长度减去该负数，之前没见过，哈哈
- WeakRef又是什么鬼？
- clone一个函数用eval？
- 迭代器和生成器，还没专门了解下。
